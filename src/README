README

TEAM PROJECT - Direct Messaging

TEAM MEMBERS:
Jeeaan Ahmmed
Ishaan
Pranav
Joey Vetter

1. How to compile and run project

2. Submissions List
    - Phase 1: Jeeaan Ahmmed
    - Phase 2:
    - Phase 3:

3. Detailed Description of Each Class

Database:
createUser: Adds a new user to the database if the user does not already exist.
deleteUser: Removes a user from the database based on matching criteria.
outputDatabase: Writes the current state of the database, including user details and messages, to a specified output file.
validateCredentials: Verifies if the provided user credentials match any user in the database.
searchUsers: Searches for a user in the database using a combination of user details.
viewUsers: Displays a list of all users in the database.


User interface:
Getters:
String getName: returns the name of the user
String getUsername: returns the username of the user
int getAge: returns the age of the user
String getPassword: returns the password of the user
String getEmail: returns the email of the user
Setters:
setName: sets the name of the user
setUsername: sets the username of the user
setAge: sets the age of the user
setPassword: sets the password of the user
setEmail: sets the email of the user

newUser:
Variables:
String name: name of the user
String username: username of the user
int age: age of the user
String password: password for the user
String email: email of the user
Constructor:
public newUser(String name, String username, int age, String password, String email): sets the values for the newUser
Getters:
String getName: returns the name of the user
String getUsername: returns the username of the user
int getAge: returns the age of the user
String getPassword: returns the password of the user
String getEmail: returns the email of the user
Setters:
setName: sets the name of the user
setUsername: sets the username of the user
setAge: sets the age of the user
setPassword: sets the password of the user
setEmail: sets the email of the user
Other methods:
isValidUsername: checks to see if the username is valid (only contains letters and digits and '_')
isValidEmail: checks if the email is valid (contains '@')
isEqual: checks if two users have the same values in all fields

runLocalTestCase:
Private Final Variable Strings:
String nameInput: Asks tester to input a name
String usernameInput: Asks tester to input a username
String ageInput: Asks tester to input an age
String ageError: Tells tester to input a valid age and loops previous string
String passwordInput: Asks tester to input a password
String emailInput: Asks tester to input an email
String emailError: Tells tester to input a valid email
    