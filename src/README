README

TEAM PROJECT - Direct Messaging

TEAM MEMBERS:
Jeeaan Ahmmed
Ishaan Krishna Agrawal
Pranav Yerram
Michael Joseph Vetter

1. How to compile and run project
      This program currently can only compile through the runLocalTestCase.java class. Further instructions are 
      located below in the detailed description of the runLocalTestCase.java class.

2. Submissions List
    - Phase 1: Jeeaan Ahmmed
    - Phase 2: Michael Vetter
    - Phase 3:

3. Detailed Description of Each Class

### Database:
- `createUser`: Adds a new user to the database if the user does not already exist.
- `deleteUser`: Removes a user from the database based on username.
- `outputDatabase`: Writes the current state of the database, including user details and their relationships, to a specified output file.
- `blockUser`: Blocks another user from being able to interact.
- `searchUsers`: Searches for a user in the database using their username.
- `addFriend`: Adds another user to the current user's friends list if not already added.
- `viewUsers`: Displays a list of all users in the database for administrative purposes.

### User Interface (`User`):
Getters:
- `getName`: Returns the name of the user.
- `getUsername`: Returns the username of the user.
- `getAge`: Returns the age of the user.
- `getPassword`: Returns the user's password (security review needed).
- `getEmail`: Returns the email of the user.

Setters:
- `setName`: Sets the name of the user.
- `setUsername`: Sets the username of the user.
- `setAge`: Sets the age of the user.
- `setPassword`: Sets the password of the user.
- `setEmail`: Sets the email of the user.
- `setBlocked`: Updates the list of blocked users.
- `setFriends`: Updates the list of friends.

### NewUser:
Variables:
- Name, Username, Age, Password, Email

Constructor:
- `NewUser(String name, String username, int age, String password, String email)`: Initializes a new user with the given parameters.

Methods:
- `isValidUsername`: Checks to see if the username is valid (only contains letters, digits, and '_').
- `isValidEmail`: Checks if the email contains '@'.
- `isEqual`: Checks if two users are the same based on their attributes.

### runLocalTestCase:
- This class tests the functionality of the user creation from a file called `input.txt`.
- Provides methods to test user creation, login functionality, and the output of the user data to a system file.

### ServerInterface:
- `loginUser`: Verifies the username and password of a user to log them in.
- `getFriendsList`: Retrieves a list of friends of the user.
- `getBlockedUsersList`: Retrieves the list of users blocked by the user.
- `getMessages`: Retrieves the last 100 messages of a user in a formatted string.

### Server:
Variables:
- `MAX_MESSAGES`: Maximum messages stored per user.
- `executorService`: Handles client requests concurrently.
- `PORT`: Port number of the server.

Methods:
- `run`: Maintains the server's operation, accepting client connections and processing requests.
- `main`: Entry point to start the server.